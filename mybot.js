require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const sqlite3 = require('sqlite3').verbose();
const token = process.env.TOKEN;
const adminUserIds = [
    717989011,
    5343154126,
    6445079871
];
const bot = new TelegramBot(token, { polling: true });
const db = new sqlite3.Database('mydatabase.db');
const userStates = {}
// users
db.run(`
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        login TEXT,
        balance INTEGER,
        totalPurchases INTEGER,
        tron_address TEXT,
        chatId INTEGER
    );
`);
// autoreg
db.run(`
    CREATE TABLE IF NOT EXISTS auto_reg_links (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS auto_reg_fp_links (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS auto_reg_fp_pk_links (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
// farmUA
db.run(`
    CREATE TABLE IF NOT EXISTS farm_ua_links7d (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS farm_ua_links14d (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS farm_ua_links30d (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
// insta
db.run(`
    CREATE TABLE IF NOT EXISTS insta_bm (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS insta_bm_fp (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS insta_bm_fp_rk (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
// pb
db.run(`
    CREATE TABLE IF NOT EXISTS pb_privat (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS pb_mono (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS pb_abank (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS pb_sens (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
// proxy
db.run(`
    CREATE TABLE IF NOT EXISTS proxy_vodafone (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS proxy_life (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
db.run(`
    CREATE TABLE IF NOT EXISTS proxy_kyivstar (
        id INTEGER PRIMARY KEY,
        link TEXT,
        price INTEGER
    );
`);
// 
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const userLogin = msg.from.username ? `@${msg.from.username}` : '@blank';

    try {
        await addUserToDatabase(userId, userLogin, chatId);

        const welcomeMessage = '–ü—Ä–∏–≤–µ—Ç! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç.';

        const startMessage = await bot.sendMessage(chatId, welcomeMessage);
        const startMessageId = startMessage.message_id;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —á–∞—Ç–µ
        userStates[chatId] = { messageId: startMessageId };
    } catch (error) {
        console.error(error.message);
    }
});
bot.onText(/\/menu/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const userLogin = msg.from.username ? `@${msg.from.username}` : '@blank';

    try {
        await addUserToDatabase(userId, userLogin, chatId);

        const welcomeMessage = '–ú–µ–Ω—é';

        const mainKeyboard = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'ü§ñ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'my_profile' }],
                    [{ text: 'üí∞ –ö—É–ø–∏—Ç—å', callback_data: 'buy' }],
                    [{ text: 'üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data: 'add_funds' }],
                    [{ text: 'üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'support' },
                    { text: 'üìÉ –ü—Ä–∞–≤–∏–ª–∞', callback_data: 'rules' }],
                ],
            },
        };

        const startMessage = await bot.sendMessage(chatId, welcomeMessage, mainKeyboard);
        const startMessageId = startMessage.message_id;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —á–∞—Ç–µ
        userStates[chatId] = { messageId: startMessageId };
    } catch (error) {
        console.error(error.message);
    }
});
bot.onText(/\/help/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (adminUserIds.includes(userId)) {
        const commands = `
\n–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - /add_funds 
\n–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç -  /add_post
\n–î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–≥ -  /add_auto_reg
\n–î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–≥ Fp -  /add_auto_fp
\n–î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–≥ Fp Pk -  /add_auto_pk
\n–î–æ–±–∞–≤–∏—Ç—å Farm UA 7–¥–Ω–µ–π - /add_farm_ua_7d
\n–î–æ–±–∞–≤–∏—Ç—å Farm UA 14–¥–Ω–µ–π - /add_farm_ua_14d
\n–î–æ–±–∞–≤–∏—Ç—å Farm UA 30–¥–Ω–µ–π - /add_farm_ua_30d
\n–î–æ–±–∞–≤–∏—Ç—å Insta BM - /add_insta_bm
\n–î–æ–±–∞–≤–∏—Ç—å Insta BM + FP - /add_insta_fp
\n–î–æ–±–∞–≤–∏—Ç—å Insta BM + FP + RK - /add_insta_rk 
\n–î–æ–±–∞–≤–∏—Ç—å –ü–ë –ø—Ä–∏–≤–∞—Ç - /add_pb_privat
\n–î–æ–±–∞–≤–∏—Ç—å –ü–ë –º–æ–Ω–æ - /add_pb_mono
\n–î–æ–±–∞–≤–∏—Ç—å –ü–ë –∞–±–∞–Ω–∫ - /add_pb_abank
\n–î–æ–±–∞–≤–∏—Ç—å –ü–ë —Å–µ–Ω—Å - /add_pb_sens
\n–î–æ–±–∞–≤–∏—Ç—å Proxy Vodafone - /add_proxy_vodafone
\n–î–æ–±–∞–≤–∏—Ç—å Proxy Life - /add_proxy_life
\n–î–æ–±–∞–≤–∏—Ç—å Proxy Kyivstar - /add_proxy_kyivstar
        `
        await bot.sendMessage(chatId, commands);
    }

});
bot.onText(/\/add_funds/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (adminUserIds.includes(userId)) {
        try {
            // –ó–∞–ø—Ä–æ—Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            const askUserIdMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:');

            // –û–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.once('text', async (userIdMsg) => {
                await bot.deleteMessage(chatId, askUserIdMessage.message_id);

                const targetUserId = parseInt(userIdMsg.text);
                if (!isNaN(targetUserId)) {
                    // –ó–∞–ø—Ä–æ—Å —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
                    const askAmountMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ $:');

                    // –û–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å —Å—É–º–º–æ–π
                    bot.once('text', async (amountMsg) => {
                        await bot.deleteMessage(chatId, askAmountMessage.message_id);

                        const enteredAmount = parseFloat(amountMsg.text);
                        if (!isNaN(enteredAmount)) {
                            // –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –ø–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∏ —Å—É–º–º–µ
                            // –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–∏—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                            await updateBalance(targetUserId, enteredAmount);

                            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
                            const successText = `–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${targetUserId} —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${enteredAmount}$.`;
                            await bot.sendMessage(chatId, successText);
                        } else {
                            // –í —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
                            await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                        }
                    });
                } else {
                    // –í —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ ID
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                }
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_post/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (adminUserIds.includes(userId)) {
        try {
            // –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ—Å—Ç–∞
            const askPostMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å—Ç–∞:');

            // –û–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ—Å—Ç–∞
            bot.once('text', async (textMsg) => {
                const postText = textMsg.text;

                // –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞
                await bot.deleteMessage(chatId, askPostMessage.message_id);

                // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                const confirmNewPostKeyboard = {
                    inline_keyboard: [
                        [{ text: '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç', callback_data: 'confirm_post' }],
                    ],
                };

                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ—Å—Ç–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                const askAmountMessage = await bot.sendMessage(chatId, `–ü–æ—Å—Ç:\n${postText}`, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmNewPostKeyboard,
                });

                // –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç"
                bot.once('callback_query', async (query) => {
                    const data = query.data;
                    const messageId = askAmountMessage.message_id;

                    if (data === 'confirm_post') {
                        try {
                            // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
                            const allUserIds = await getAllUsersId();

                            // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            for (const userId of allUserIds) {
                                try {
                                    await bot.sendMessage(userId, `${postText}`, { parse_mode: 'MarkdownV2' });
                                } catch (error) {
                                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error.message);
                                }
                            }
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤:', error.message);
                        }
                    }
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
function addUserToDatabase(userId, login, chatId) {
    return new Promise((resolve, reject) => {
        db.get("SELECT * FROM users WHERE id = ?", [userId], (err, row) => {
            if (err) {
                reject(err);
                return;
            }

            if (!row) {
                db.run("INSERT INTO users (id, login, balance, totalPurchases, chatId) VALUES (?, ?, ?, ?, ?)", [userId, login, 0, 0, chatId], (err) => {
                    if (err) {
                        reject(err);
                        return;
                    }
                    resolve();
                });
            } else {
                resolve();
            }
        });
    });
}
bot.on('tronPayment', async (payment) => {
    const userId = payment.userId;
    const amount = payment.amount;

    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try {
        await updateBalance(userId, amount);
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
        await notifyUser(userId, amount);
    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
    }
});
async function makePurchase(userId, purchaseAmount) {
    try {
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è —Å –±–∞–ª–∞–Ω—Å–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫
        db.run("UPDATE users SET totalPurchases = totalPurchases + ? WHERE id = ?", [purchaseAmount, userId]);
    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
        throw error; // –ú–æ–∂–µ—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤–∞—à–∏–º–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º–∏
    }
}
async function notifyUser(userId, amount) {
    // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à –º–µ—Ö–∞–Ω–∏–∑–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, Telegram Bot API
    const chatId = await getChatId(userId);
    const notificationText = `–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${amount}$. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
    await bot.sendMessage(chatId, notificationText);
}
async function getBalance(userId) {
    return new Promise((resolve, reject) => {
        db.get("SELECT balance FROM users WHERE id = ?", [userId], (err, row) => {
            if (err) {
                reject(err);
            } else {
                resolve(row.balance);
            }
        });
    });
}
async function getAllUsersId() {
    return new Promise((resolve, reject) => {
        db.all("SELECT id FROM users", (err, rows) => {
            if (err) {
                reject(err);
            } else {
                // –ò–∑–≤–ª–µ—á—å –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                const userIds = rows.map(row => row.id);
                resolve(userIds);
            }
        });
    });
}
async function getChatId(userId) {
    return new Promise((resolve, reject) => {
        db.get("SELECT chatId FROM users WHERE id = ?", [userId], (err, row) => {
            if (err) {
                reject(err);
            } else {
                resolve(row.chatId);
            }
        });
    });
}
async function updateBalance(userId, amount) {
    return new Promise((resolve, reject) => {
        db.run("UPDATE users SET balance = balance + ? WHERE id = ?", [amount, userId], (err) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
                reject(err);
            } else {
                console.log(`–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${amount}`);
                notifyUser(userId, amount)
                resolve();
            }
        });
    });
}
async function deductBalance(userId, amount) {
    return new Promise((resolve, reject) => {
        db.run("UPDATE users SET balance = balance - ? WHERE id = ?", [amount, userId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å –±–∞–ª–∞–Ω—Å–∞:', err);
                reject(err);
            } else {
                makePurchase(userId, amount); // –ü–µ—Ä–µ–¥–∞–µ–º —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é makePurchase
                resolve();
            }
        });
    });
}
// 
async function removeFarmUa7d(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM farm_ua_links7d WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeFarmUa14d(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM farm_ua_links14d WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeFarmUa30d(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM farm_ua_links30d WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeInstaBm(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM insta_bm WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeInstaBmFp(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM insta_bm_fp WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeInstaBmFpRk(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM insta_bm_fp_rk WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removePbPrivat(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM pb_privat WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removePbMono(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM pb_mono WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removePbAbank(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM pb_abank WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removePbSens(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM pb_sens WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeProxyVodafone(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM proxy_vodafone WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeProxyLife(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM proxy_life WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeProxyKyivstar(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM proxy_kyivstar WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeAutoReg(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM auto_reg_links WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeAutoRegFp(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM auto_reg_fp_links WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
async function removeAutoRegFpPk(autoRegId) {
    return new Promise((resolve, reject) => {
        // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ auto_reg_links
        db.run("DELETE FROM auto_reg_fp_pk_links WHERE id = ?", [autoRegId], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–∞:', err);
                reject(err);
            } else {
                // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                resolve();
            }
        });
    });
}
// 
async function getUserById(userId) {
    return new Promise((resolve, reject) => {
        db.get("SELECT * FROM users WHERE id = ?", [userId], (err, row) => {
            if (err) {
                reject(err);
            } else {
                resolve(row);
            }
        });
    });
}
// 
bot.onText(/\/add_auto_reg/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addAutoRegLink(link, price);
                    }

                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, '–ê–≤—Ç–æ—Ä–µ–≥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableAutoRegs(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_auto_fp/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞ fp:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addAutoRegFpLink(link, price);
                    }

                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, '–ê–≤—Ç–æ—Ä–µ–≥ fp —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableAutoRegsFp(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_auto_pk/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞ fp pk:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addAutoRegFpPkLink(link, price);
                    }

                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, '–ê–≤—Ç–æ—Ä–µ–≥ fp pk —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableAutoRegsFpPk(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
// 
bot.onText(/\/add_farm_ua_7d/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É Farm UA 7d:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addFarmUaLink7D(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'Farm UA —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableFarmUa7D(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_farm_ua_14d/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É Farm UA 14d:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addFarmUaLink14D(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'Farm UA —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableFarmUa14D(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_farm_ua_30d/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É Farm UA 30d:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addFarmUaLink30D(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'Farm UA —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableFarmUa30D(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
// 
bot.onText(/\/add_insta_bm/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É InstaBm:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addInstaBmLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'InstaBm —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableInstaBm(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_insta_fp/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É InstaBmFp:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addInstaBmFpLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'InstaBmFp —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableInstaBmFp(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_insta_rk/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É InstaBmFpRk:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addInstaBmFpRkLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'InstaBmFpRk —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableInstaBmFpRk(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
// 
bot.onText(/\/add_pb_privat/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É PB Privat:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addPbPrivatLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'PB Privat —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailablePbPrivat(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_pb_mono/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É PB Mono:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addPbMonoLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'PB Mono —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailablePbMono(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_pb_abank/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É PB Abank:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addPbAbankLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'PB Abank —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailablePbAbank(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_pb_sens/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É PB Sens:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addPbSensLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'PB Sens —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailablePbSens(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
// 
bot.onText(/\/add_proxy_vodafone/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É Proxy Vodafone:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addProxyVodafoneLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'Proxy Vodafone —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableProxyVodafone(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_proxy_life/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É Proxy Life:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addProxyLifeLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'Proxy Life —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableProxyLife(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
bot.onText(/\/add_proxy_kyivstar/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    if (adminUserIds.includes(userId)) {


        try {
            const priceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É Proxy Kyivstar:');

            bot.once('text', async (msg) => {
                const price = parseFloat(msg.text);

                if (isNaN(price)) {
                    await bot.sendMessage(chatId, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.');
                    return;
                }

                const linksMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –î–∏—Å–∫ (–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):');

                bot.once('text', async (msg) => {
                    const links = msg.text.split('\n');

                    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    for (const link of links) {
                        await addProxyKyivstarLink(link, price);
                    }
                    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    await bot.sendMessage(chatId, 'Proxy Kyivstar —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');

                    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤
                    const autoRegs = await getAvailableProxyKyivstar(userId);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                });
            });
        } catch (error) {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:', error);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
});
// 
async function addAutoRegLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ auto_reg_links
        db.run("INSERT INTO auto_reg_links ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addAutoRegFpLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ auto_reg_links
        db.run("INSERT INTO auto_reg_fp_links ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addAutoRegFpPkLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ auto_reg_links
        db.run("INSERT INTO auto_reg_fp_pk_links ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addFarmUaLink7D(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO farm_ua_links7d ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addFarmUaLink14D(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO farm_ua_links14d ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addFarmUaLink30D(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO farm_ua_links30d ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addInstaBmLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO insta_bm ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addInstaBmFpLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO insta_bm_fp ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addInstaBmFpRkLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO insta_bm_fp_rk ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addPbPrivatLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO pb_privat ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addPbMonoLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO pb_mono ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addPbAbankLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO pb_abank ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addPbSensLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO pb_sens ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addProxyVodafoneLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO proxy_vodafone ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addProxyLifeLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO proxy_life ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
async function addProxyKyivstarLink(link, price) {
    return new Promise((resolve, reject) => {
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ farm_ua_links7d
        db.run("INSERT INTO proxy_kyivstar ( link, price) VALUES ( ?, ?)", [link, price], function (err) {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–µ–≥:', err);
                reject(err);
            } else {
                const autoRegId = this.lastID; // ID —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
                resolve({ id: autoRegId, price, link });
            }
        });
    });
}
// 
async function getAvailableAutoRegs() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM auto_reg_links", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableAutoRegsFp() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM auto_reg_fp_links", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableAutoRegsFpPk() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM auto_reg_fp_pk_links", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableFarmUa7D() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM farm_ua_links7d", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableFarmUa14D() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM farm_ua_links14d", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableFarmUa30D() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM farm_ua_links30d", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableInstaBm() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM insta_bm", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableInstaBmFp() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM insta_bm_fp", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableInstaBmFpRk() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM insta_bm_fp_rk", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailablePbPrivat() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM pb_privat", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailablePbMono() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM pb_mono", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailablePbAbank() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM pb_abank", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailablePbSens() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM pb_sens", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableProxyVodafone() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM proxy_vodafone", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö proxy vodafone:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableProxyLife() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM proxy_life", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function getAvailableProxyKyivstar() {
    return new Promise((resolve, reject) => {
        db.all("SELECT * FROM proxy_kyivstar", (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', err);
                reject(err);
            } else {
                resolve(rows);
            }
        });
    });
}
async function sendAutoRegLinks(userId, quantity) {
    try {
        const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const balance = await getBalance(userId)
        if (autoRegs.length > 0) {
            for (let i = 0; i < quantity; i++) {
                const autoReg = autoRegs[i];
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–∂–¥—ã–π –∞–≤—Ç–æ—Ä–µ–≥
                await bot.sendMessage(userId, `–í–∞—à —Ç–æ–≤–∞—Ä: ${autoReg.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${balance}$`);
            }
        } else {
            await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
        }
    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
        throw error;
    }
}
async function sendAutoRegFpLinks(userId, quantity) {
    try {
        const autoRegs = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const balance = await getBalance(userId)
        if (autoRegs.length > 0) {
            for (let i = 0; i < quantity; i++) {
                const autoReg = autoRegs[i];
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–∂–¥—ã–π –∞–≤—Ç–æ—Ä–µ–≥
                await bot.sendMessage(userId, `–í–∞—à —Ç–æ–≤–∞—Ä: ${autoReg.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${balance}$`);
            }
        } else {
            await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
        }
    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
        throw error;
    }
}
async function sendAutoRegFpPkLinks(userId, quantity) {
    try {
        const autoRegs = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const balance = await getBalance(userId)
        if (autoRegs.length > 0) {
            for (let i = 0; i < quantity; i++) {
                const autoReg = autoRegs[i];
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–∂–¥—ã–π –∞–≤—Ç–æ—Ä–µ–≥
                await bot.sendMessage(userId, `–í–∞—à —Ç–æ–≤–∞—Ä: ${autoReg.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${balance}$`);
            }
        } else {
            await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
        }
    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
        throw error;
    }
}
// 
bot.on('callback_query', async (callbackQuery) => {
    const chatId = callbackQuery.message.chat.id;
    const currentState = userStates[chatId];
    const action = callbackQuery.data;
    const userId = callbackQuery.from.id;
    const userLogin = callbackQuery.from.username ? `@${callbackQuery.from.username}` : '@blank';

    switch (action) {
        case 'my_profile':
            db.get('SELECT * FROM users WHERE id = ?', [userId], async (err, row) => {
                const profileText = "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å";
                if (!err && row) {
                    const profileKeyboard = {
                        inline_keyboard: [
                            [{ text: `–õ–æ–≥–∏–Ω: ${row.login || userId}`, callback_data: 'show_login' }],
                            [{ text: `–ë–∞–ª–∞–Ω—Å: ${row.balance}$`, callback_data: 'show_balance' }],
                            [{ text: `–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: ${row.totalPurchases}$`, callback_data: 'show_purchases' }],
                            [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'back_to_main' }],
                        ],
                    };
                    if (currentState && currentState.messageId) {
                        await bot.editMessageText(profileText, { chat_id: chatId, message_id: currentState.messageId });
                        await bot.editMessageReplyMarkup(profileKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                    }
                } else {
                    await bot.sendMessage(chatId, '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ.');
                }
            });
            break;
        case 'buy':
            const buyText = "–ö—É–ø–∏—Ç—å"
            const buyKeyboard = {
                inline_keyboard: [
                    [{ text: '–†—É—á–Ω–æ–π —Ñ–∞—Ä–º', callback_data: 'manual_farm' }],
                    [{ text: '–ê–≤—Ç–æ—Ä–µ–≥–∏', callback_data: 'auto_reg' }],
                    [{ text: '–ë–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä (BM)', callback_data: 'business_manager' }],
                    [{ text: '–ö–∞—Ä—Ç—ã –¥–ª—è –ü–ë', callback_data: 'cards_for_pb' }],
                    [{ text: '–ü—Ä–æ–∫—Å–∏', callback_data: 'proxy' }],
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'back_to_main' }],
                ],
            };
            if (currentState && currentState.messageId) {
                await bot.editMessageText(buyText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(buyKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentManualFarmMessage = await bot.sendMessage(chatId, buyText, {
                    reply_markup: buyKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'manual_farm':
            const manualFarmText = '–†—É—á–Ω–æ–π —Ñ–∞—Ä–º.';

            const manualFarmKeyboard = {
                inline_keyboard: [
                    [{ text: '–§–∞—Ä–º UA', callback_data: 'farm_ua' }],
                    [{ text: '–û–∂–∏–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ì–ï–û', callback_data: 'geo_recharge' }],
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(manualFarmText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(manualFarmKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentManualFarmMessage = await bot.sendMessage(chatId, manualFarmText, {
                    reply_markup: manualFarmKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'auto_reg':
            const autoRegText = '–ê–≤—Ç–æ—Ä–µ–≥–∏';

            const autoRegKeyboard = {
                inline_keyboard: [
                    [{ text: '–ê–≤—Ç–æ—Ä–µ–≥ UA', callback_data: 'auto_reg_ua' }],
                    [{ text: '–û–∂–∏–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ì–ï–û', callback_data: 'geo_recharge' }],
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(autoRegText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(autoRegKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentAutoRegMessage = await bot.sendMessage(chatId, autoRegText, {
                    reply_markup: autoRegKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'auto_reg_ua':
            try {
                const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(autoRegs.map(autoReg => autoReg.price));
                const uniquePricesFp = new Set(autoRegsFp.map(autoReg => autoReg.price));
                const uniquePricesFpPK = new Set(autoRegsFpPk.map(autoReg => autoReg.price));
                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const autoRegUaText = '–ê–≤—Ç–æ—Ä–µ–≥ UA';
                const autoRegUaKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `–ê–≤—Ç–æ—Ä–µ–≥ UA | ${price || 0}$ | –ö–æ–ª-–≤–æ: ${autoRegs.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `auto_reg_ua_info`
                        }]),
                        ...Array.from(uniquePricesFp).map(price => [{
                            text: `–ê–≤—Ç–æ—Ä–µ–≥ UA + FP | ${price || 0}$ | –ö–æ–ª-–≤–æ: ${autoRegsFp.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `auto_reg_ua_fp`
                        }]),
                        ...Array.from(uniquePricesFpPK).map(price => [{
                            text: `–ê–≤—Ç–æ—Ä–µ–≥ UA + FP + PK | ${price || 0}$ | –ö–æ–ª-–≤–æ: ${autoRegsFpPk.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `auto_reg_ua_fp_pk`
                        }]),
                        ...(autoRegs.length === 0 ? [[{ text: '–ê–≤—Ç–æ—Ä–µ–≥ UA | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'auto_reg_ua_info' }]] : []),
                        ...(autoRegsFp.length === 0 ? [[{ text: '–ê–≤—Ç–æ—Ä–µ–≥ UA + FP | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'auto_reg_ua_fp' }]] : []),
                        ...(autoRegsFpPk.length === 0 ? [[{ text: '–ê–≤—Ç–æ—Ä–µ–≥ UA + FP + PK | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'auto_reg_ua_fp_pk' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'auto_reg' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(autoRegUaText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(autoRegUaKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, autoRegUaText, {
                        reply_markup: autoRegUaKeyboard,
                    });

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'business_manager':
            const bmText = '–ë–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä (BM)';

            const bmKeyboard = {
                inline_keyboard: [
                    [{ text: 'Insta BM', callback_data: 'insta_bm' }],
                    [{ text: 'Insta BM + FP', callback_data: 'insta_bm_fp' }],
                    [{ text: 'Insta BM + FP + –†–ö', callback_data: 'insta_bm_fp_rk' }],
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(bmText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(bmKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentBmMessage = await bot.sendMessage(chatId, bmText, {
                    reply_markup: bmKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'insta_bm':
            try {
                const instaBms = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(instaBms.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const instaBmText = 'Insta BM';
                const instaBmKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `Insta BM | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${instaBms.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `insta_bm_info`
                        }]),
                        ...(instaBms.length === 0 ? [[{ text: 'Insta BM | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'insta_bm_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'business_manager' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(instaBmText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(instaBmKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, instaBmText, {
                        reply_markup: instaBmKeyboard,
                    });

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'insta_bm_fp':
            try {
                const instaBmsFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(instaBmsFp.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const instaBmFpText = 'Insta BM + FP';
                const instaBmFpKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `Insta BM + FP | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${instaBmsFp.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `insta_bm_fp_info`
                        }]),
                        ...(instaBmsFp.length === 0 ? [[{ text: 'Insta BM + FP | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'insta_bm_fp_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'business_manager' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(instaBmFpText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(instaBmFpKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, instaBmFpText, {
                        reply_markup: instaBmFpKeyboard,
                    });

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'insta_bm_fp_rk':
            try {
                const instaBmsFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(instaBmsFpRk.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const instaBmFpRkText = 'Insta BM + FP + PK';
                const instaBmFpRkKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `Insta BM + FP + PK | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${instaBmsFpRk.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `insta_bm_fp_rk_info`
                        }]),
                        ...(instaBmsFpRk.length === 0 ? [[{ text: 'Insta BM + FP + PK | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'insta_bm_fp_rk_info' }]] : []),

                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'business_manager' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(instaBmFpRkText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(instaBmFpRkKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, instaBmFpRkText, {
                        reply_markup: instaBmFpRkKeyboard,
                    });

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'cards_for_pb':
            const cardsForPbText = '–ö–∞—Ä—Ç—ã –¥–ª—è –ü–ë';

            const cardsForPbKeyboard = {
                inline_keyboard: [
                    [{ text: '–ü—Ä–∏–≤–∞—Ç', callback_data: 'cards_for_pb_privat' }],
                    [{ text: '–ú–æ–Ω–æ–±–∞–Ω–∫', callback_data: 'cards_for_pb_monobank' }],
                    [{ text: '–ê-–ë–∞–Ω–∫', callback_data: 'cards_for_pb_a_bank' }],
                    [{ text: '–°–µ–Ω—Å', callback_data: 'cards_for_pb_sens' }],
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(cardsForPbText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(cardsForPbKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentCardsForPbMessage = await bot.sendMessage(chatId, cardsForPbText, {
                    reply_markup: cardsForPbKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'cards_for_pb_privat':
            try {
                const privats = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(privats.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const privatText = '–ü—Ä–∏–≤–∞—Ç';
                const privatKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `–ü—Ä–∏–≤–∞—Ç bin | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${privats.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `privat_info`
                        }]),
                        ...(privats.length === 0 ? [[{ text: '–ü—Ä–∏–≤–∞—Ç bin | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'privat_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'cards_for_pb' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(privatText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(privatKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, privatText, {
                        reply_markup: privatKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'cards_for_pb_monobank':
            try {
                const mono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(mono.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const monoText = '–ú–æ–Ω–æ–±–∞–Ω–∫';
                const monoKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `–ú–æ–Ω–æ–±–∞–Ω–∫ bin | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${mono.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `monobank_info`
                        }]),
                        ...(mono.length === 0 ? [[{ text: '–ú–æ–Ω–æ–±–∞–Ω–∫ bin | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'monobank_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'cards_for_pb' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(monoText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(monoKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, monoText, {
                        reply_markup: monoKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'cards_for_pb_a_bank':
            try {
                const abank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(abank.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const abankText = '–ê-–±–∞–Ω–∫';
                const abankKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `–ê-–±–∞–Ω–∫ bin | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${abank.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `a_bank_info`
                        }]),
                        ...(abank.length === 0 ? [[{ text: '–ê-–±–∞–Ω–∫ bin | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'a_bank_info' }]] : []),

                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'cards_for_pb' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(abankText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(abankKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, abankText, {
                        reply_markup: abankKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'cards_for_pb_sens':
            try {
                const sens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(sens.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const sensText = '–°–µ–Ω—Å';
                const sensKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `–°–µ–Ω—Å bin | ${price || 10}$ | –ö–æ–ª-–≤–æ: ${sens.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `sens_info`
                        }]),
                        ...(sens.length === 0 ? [[{ text: '–°–µ–Ω—Å bin | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'sens_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'cards_for_pb' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(sensText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(sensKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, sensText, {
                        reply_markup: sensKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'proxy':
            const proxyText = '–ü—Ä–æ–∫—Å–∏';

            const proxyKeyboard = {
                inline_keyboard: [
                    [{ text: 'Vodafone', callback_data: 'proxy_vodafone' }],
                    [{ text: 'Life', callback_data: 'proxy_life' }],
                    [{ text: 'Kyivstar', callback_data: 'proxy_kyivstar' }],
                    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ü—Ä–æ–∫—Å–∏ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(proxyText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(proxyKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentProxyMessage = await bot.sendMessage(chatId, proxyText, {
                    reply_markup: proxyKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'proxy_vodafone':
            try {
                const vodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(vodafone.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const vodafoneText = 'Vodafone';
                const vodafoneKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `30 –¥–Ω–µ–π | ${price || 10}$`,
                            callback_data: `vodafone_info`
                        }]),
                        ...(vodafone.length === 0 ? [[{ text: '30 –¥–Ω–µ–π | 40$', callback_data: 'vodafone_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'proxy' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(vodafoneText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(vodafoneKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, vodafoneText, {
                        reply_markup: vodafoneKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'proxy_life':
            try {
                const life = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(life.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const lifeText = 'Life';
                const lifeKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `30 –¥–Ω–µ–π | ${price || 10}$`,
                            callback_data: `life_info`
                        }]),
                        ...(life.length === 0 ? [[{ text: '30 –¥–Ω–µ–π | 40$', callback_data: 'life_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'proxy' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(lifeText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(lifeKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, lifeText, {
                        reply_markup: lifeKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'proxy_kyivstar':
            try {
                const kyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices = new Set(kyivstar.map(autoReg => autoReg.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const kyivstarText = 'Kyivstar';
                const kyivstarKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices).map(price => [{
                            text: `30 –¥–Ω–µ–π | ${price || 10}$`,
                            callback_data: `kyivstar_info`
                        }]),
                        ...(kyivstar.length === 0 ? [[{ text: '30 –¥–Ω–µ–π | 40$', callback_data: 'kyivstar_info' }]] : []),
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'proxy' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(kyivstarText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(kyivstarKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentAutoRegUaMessage = await bot.sendMessage(chatId, kyivstarText, {
                        reply_markup: kyivstarKeyboard,
                    });
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'back_to_main':
            const mainText = "–ú–µ–Ω—é"
            const mainKeyboard = {
                inline_keyboard: [
                    [{ text: 'ü§ñ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'my_profile' }],
                    [{ text: 'üí∞ –ö—É–ø–∏—Ç—å', callback_data: 'buy' }],
                    [{ text: 'üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data: 'add_funds' }],
                    [{ text: 'üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'support' },
                    { text: 'üìÉ –ü—Ä–∞–≤–∏–ª–∞', callback_data: 'rules' }],
                ],
            };
            if (bot.editMessageText && bot.editMessageReplyMarkup) {
                if (currentState && currentState.messageId) {
                    bot.editMessageText(mainText, { chat_id: chatId, message_id: currentState.messageId });
                    bot.editMessageReplyMarkup(mainKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentRulesMessage = await bot.sendMessage(chatId, mainText, {
                        parse_mode: 'Markdown',
                        reply_markup: mainKeyboard,
                    })
                }
            } else {
                // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–µ—Ç–æ–¥–æ–≤
                console.error('–ú–µ—Ç–æ–¥—ã editMessageText –∏–ª–∏ editMessageReplyMarkup –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–ª–∏ —Å—Ä–µ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.');
                // –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.
            }
            break;
        case 'rules':
            const rulesText = `
        *–ü—Ä–∞–≤–∏–ª–∞:*
        –ü–æ–∫—É–ø–∞—è —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —ç—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞.
        –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –ø–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º!
        –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ RISK PAYMENT, POLICY –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã –±–∞–Ω–∞.
        –≠—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –∫–∞–∫ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π Facebook, —Ç–∞–∫ –∏ –∫–∞—Ä—Ç –∏ –≤–∞—à–µ–≥–æ –∑–∞–ø—É—Å–∫–∞.
        –í—Å–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏ –ø–æ –≤–æ–∑–≤—Ä–∞—Ç—É/–æ–±–º–µ–Ω—É –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –¥–Ω—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ (–Ω–µ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤).
        –ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ 24-—Ö —á–∞—Å–æ–≤, –ª—é–±—ã–µ –≤–æ–∑–≤—Ä–∞—Ç—ã/–æ–±–º–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–æ—Ä–∞—é—Ç –∏ —É—Ö–æ–¥—è—Ç –≤ —Å—á–µ—Ç —Å–µ—Ä–≤–∏—Å–∞.
        –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω, –º–∞–Ω–∏–±–µ–∫–æ–≤ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —ç—Ç–æ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤! –≠—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ.
        –í —Å–ª—É—á–∞–µ –æ–±–º–∞–Ω–∞ —Å –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã —Å –Ω–µ–≤–∞–ª–∏–¥–æ–º - –æ—Ç–∫–∞–∑ –≤ –≤–æ–∑–≤—Ä–∞—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤, —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ, –∑–∞–º–µ–Ω–µ. –í–µ—á–Ω—ã–π –ë–ê–ù –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –°–ö–ê–ú –ª–∏—Å—Ç.
        –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–º–µ–Ω—É –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–∞ –≤ –±–æ—Ç–µ –∏ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –æ—à–∏–±–∫–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä—É.
        –í—Å–µ–º —Ç–æ–ø–æ–≤—ã—Ö –∑–∞–ª–∏–≤–æ–≤!
        –ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏!
    `;

            const rulesKeyboard = {
                inline_keyboard: [
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'back_to_main' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(rulesText, { chat_id: chatId, message_id: currentState.messageId, parse_mode: 'Markdown' });
                await bot.editMessageReplyMarkup(rulesKeyboard, { chat_id: chatId, message_id: currentState.messageId });

            } else {
                const sentRulesMessage = await bot.sendMessage(chatId, rulesText, {
                    parse_mode: 'Markdown',
                    reply_markup: rulesKeyboard,
                });
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                // 
            }
            break;
        case 'support':
            const supportText = "–ü–æ–¥–¥–µ—Ä–∂–∫–∞\n@r0yal13"
            const supportKeyboard = {
                inline_keyboard: [
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'back_to_main' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(supportText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(supportKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentSupportMessage = await bot.sendMessage(chatId, supportText, {
                    reply_markup: supportKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'farm_ua':
            try {
                const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç Set –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
                const uniquePrices7D = new Set(farmUa7D.map(farmUa => farmUa.price));
                const uniquePrices14D = new Set(farmUa14D.map(farmUa => farmUa.price));
                const uniquePrices30D = new Set(farmUa30D.map(farmUa => farmUa.price));

                // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
                const manualFText = "–§–∞—Ä–º UA"
                const farmUaKeyboard = {
                    inline_keyboard: [
                        ...Array.from(uniquePrices7D).map(price => [{
                            text: `UA —Ñ–∞—Ä–º 7 –¥–Ω–µ–π | ${price || "–æ—à–∏–±–∫–∞"}$ | –ö–æ–ª-–≤–æ: ${farmUa7D.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `ua_farm_7_days`
                        }]),
                        ...Array.from(uniquePrices14D).map(price => [{
                            text: `UA —Ñ–∞—Ä–º 14 –¥–Ω–µ–π | ${price || "–æ—à–∏–±–∫–∞"}$ | –ö–æ–ª-–≤–æ: ${farmUa14D.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `ua_farm_14_days`
                        }]),
                        ...Array.from(uniquePrices30D).map(price => [{
                            text: `UA —Ñ–∞—Ä–º 30 –¥–Ω–µ–π | ${price || "–æ—à–∏–±–∫–∞"}$ | –ö–æ–ª-–≤–æ: ${farmUa30D.filter(reg => reg.price === price).length || 0}`,
                            callback_data: `ua_farm_30_days`
                        }]),
                        ...(farmUa7D.length === 0 ? [[{ text: 'UA —Ñ–∞—Ä–º 7 –¥–Ω–µ–π | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'ua_farm_7_days' }]] : []),
                        ...(farmUa14D.length === 0 ? [[{ text: 'UA —Ñ–∞—Ä–º 14 –¥–Ω–µ–π | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'ua_farm_14_days' }]] : []),
                        ...(farmUa30D.length === 0 ? [[{ text: 'UA —Ñ–∞—Ä–º 30 –¥–Ω–µ–π | 0$ | –ö–æ–ª-–≤–æ: 0', callback_data: 'ua_farm_30_days' }]] : []),

                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'manual_farm' }],
                    ],
                };

                if (currentState && currentState.messageId) {
                    await bot.editMessageText(manualFText, { chat_id: chatId, message_id: currentState.messageId });
                    await bot.editMessageReplyMarkup(farmUaKeyboard, { chat_id: chatId, message_id: currentState.messageId });
                } else {
                    const sentFarmUaMessege = await bot.sendMessage(chatId, manualFText, {
                        reply_markup: farmUaKeyboard,
                    });

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥–æ–≤:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'add_funds':
            const addFundsText = '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:';

            const addFundsKeyboard = {
                inline_keyboard: [
                    [{ text: 'Binance ID', callback_data: 'binance_id' }],
                    [{ text: '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ (USDT TRC20)', callback_data: 'crypto' }],
                    [{ text: '–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –∫–∞—Ä—Ç–∞', callback_data: 'ua_card' }],
                    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
                    [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: 'back_to_main' }],
                ],
            };

            if (currentState && currentState.messageId) {
                await bot.editMessageText(addFundsText, { chat_id: chatId, message_id: currentState.messageId });
                await bot.editMessageReplyMarkup(addFundsKeyboard, { chat_id: chatId, message_id: currentState.messageId });
            } else {
                const sentAddFundsMessage = await bot.sendMessage(chatId, addFundsText, {
                    reply_markup: addFundsKeyboard,
                });

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π messageId –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            }
            break;
        case 'binance_id':
            const inputBinanceMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ $:');
            let photoReceivedBinance = false;

            bot.once('text', async (msg) => {
                await bot.deleteMessage(chatId, inputBinanceMessage.message_id);

                const enteredAmount = parseFloat(msg.text);
                const copyBinance = `<code>391483018</code>`;

                if (!isNaN(enteredAmount)) {
                    const fundsBinanceText = `–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É ${enteredAmount}$ –ø–æ Binance\n${copyBinance}\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ (–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã).`;
                    await bot.sendMessage(chatId, fundsBinanceText, { parse_mode: 'HTML' });
                    // –û–∂–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ
                    while (!photoReceivedBinance) {
                        try {
                            const photo = await new Promise((resolve) => bot.once('photo', resolve));
                            const photoInfo = photo.photo[0];

                            if (photoInfo && photoInfo.file_id) {
                                await bot.sendMessage(userId, `–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–∞–ø–ø–æ—Ä—Ç–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.`);
                                photoReceivedBinance = true;
                                const userIdToCopyBinance = `<code>üëÜ${userId}</code>`
                                for (const adminUserId of adminUserIds) {
                                    await bot.sendPhoto(adminUserId, photoInfo.file_id, { caption: `–§–æ—Ç–æ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—É–º–º—É ${enteredAmount}$\nID: ${userId}\n–ù–∏–∫: ${userLogin}\n–ß–µ—Ä–µ–∑: Binance` });
                                    await bot.sendMessage(adminUserId, userIdToCopyBinance, { parse_mode: 'HTML' });
                                }
                            } else {
                                console.error('–û—à–∏–±–∫–∞: –§–æ—Ç–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ.');
                                await bot.sendMessage(chatId, '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–ø–ª–∞—Ç—ã.');
                            }
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ:', error.message);
                        }
                    }
                } else {
                    await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ $.');
                }
            });
            break;
        case 'crypto':
            const inputCryptoMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ $:');
            let photoReceivedCrypto = false;

            bot.once('text', async (msg) => {
                await bot.deleteMessage(chatId, inputCryptoMessage.message_id);

                const enteredAmount = parseFloat(msg.text);
                const copyBinance = `<code>TSgbGfsYGvCPNG7StbapVaNP727vrXBig9</code>`;

                if (!isNaN(enteredAmount)) {
                    const fundsCryptoText = `–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É ${enteredAmount}$ –ø–æ Crypto\n${copyBinance}\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ (–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã).`;
                    await bot.sendMessage(chatId, fundsCryptoText, { parse_mode: 'HTML' });
                    // –û–∂–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ
                    while (!photoReceivedCrypto) {
                        try {
                            const photo = await new Promise((resolve) => bot.once('photo', resolve));
                            const photoInfo = photo.photo[0];

                            if (photoInfo && photoInfo.file_id) {
                                await bot.sendMessage(userId, `–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–∞–ø–ø–æ—Ä—Ç–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.`);
                                photoReceivedCrypto = true;
                                const userIdToCopyCrypto = `<code>üëÜ${userId}</code>`
                                for (const adminUserId of adminUserIds) {
                                    await bot.sendPhoto(adminUserId, photoInfo.file_id, { caption: `–§–æ—Ç–æ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—É–º–º—É ${enteredAmount}$\nID: ${userId}\n–ù–∏–∫: ${userLogin}\n–ß–µ—Ä–µ–∑: Crypto` });
                                    await bot.sendMessage(adminUserId, userIdToCopyCrypto, { parse_mode: 'HTML' });

                                }
                            } else {
                                console.error('–û—à–∏–±–∫–∞: –§–æ—Ç–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ.');
                                await bot.sendMessage(chatId, '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–ø–ª–∞—Ç—ã.');
                            }
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ:', error.message);
                        }
                    }
                } else {
                    await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ $.');
                }
            });
            break;
        case 'ua_card':
            const inputUACardsMessage = await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ $:');
            let photoReceivedUaCard = false;

            bot.once('text', async (msg) => {
                await bot.deleteMessage(chatId, inputUACardsMessage.message_id);

                const enteredAmount = parseFloat(msg.text);
                const copyCard = `<code>4028082011730940</code>`;

                if (!isNaN(enteredAmount)) {
                    const fundsUACardsText = `–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É ${enteredAmount}$ –ø–æ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç–µ\n${copyCard}\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ (–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã).`;
                    await bot.sendMessage(chatId, fundsUACardsText, { parse_mode: 'HTML' });
                    // –û–∂–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ
                    while (!photoReceivedUaCard) {
                        try {
                            const photo = await new Promise((resolve) => bot.once('photo', resolve));
                            const photoInfo = photo.photo[0];

                            if (photoInfo && photoInfo.file_id) {
                                await bot.sendMessage(userId, `–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–∞–ø–ø–æ—Ä—Ç–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.`);
                                photoReceivedUaCard = true;
                                const userIdToCopyUaCard = `<code>üëÜ${userId}</code>`
                                for (const adminUserId of adminUserIds) {
                                    await bot.sendPhoto(adminUserId, photoInfo.file_id, { caption: `–§–æ—Ç–æ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—É–º–º—É ${enteredAmount}$\nID: ${userId}\n–ù–∏–∫: ${userLogin}\n–ß–µ—Ä–µ–∑: UA Card` });
                                    await bot.sendMessage(chatId, userIdToCopyUaCard, { parse_mode: 'HTML' });
                                }
                            } else {
                                console.error('–û—à–∏–±–∫–∞: –§–æ—Ç–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ.');
                                await bot.sendMessage(chatId, '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–ø–ª–∞—Ç—ã.');
                            }
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ:', error.message);
                        }
                    }
                } else {
                    await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ $.');
                }
            });
            break;
        case 'ua_farm_7_days':
            const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (farmUa7D.length > 0) {
                const farmUa7DPrice = farmUa7D[0].price;
                const uaFarm7Message = `
*--- –ú–æ—â–Ω—ã–π —Ä—É—á–Ω–æ–π —Ñ–∞—Ä–º 7 –¥–Ω–µ–π ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
- –ö–∏–Ω–≥/–º–∞–º–∫–∞/—Å–æ—Ü –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏—Å—å –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º IP.

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –ñ–µ–Ω—Å–∫–∏–π –ø–æ–ª
- –ò–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ
- –î—Ä—É–∑—å—è 20-100
- –ù–∞–≥—É–ª—è–Ω–Ω—ã–µ cookies (2000+)
- 15+ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
- –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ 8+ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏ –ª–µ–Ω—Ç–µ
- 20+ –ø–æ—Å—Ç–æ–≤/—Ä–µ–ø–æ—Å—Ç–æ–≤
- 2 –∞–¥–µ–∫–≤–∞—Ç–Ω–æ –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ Fan Page + 3 –ø–æ—Å—Ç–∞
- –í–æ–∑—Ä–∞—Å—Ç 20-35
- –ü—Ä–∏–≤—è–∑–∞–Ω–∞ –ø–æ—á—Ç–∞
- –ü–∞—Å–ø–æ—Ä—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ó–†–î 70%
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ–∞—Ä–º (–ø–µ—Ä–µ–ø–∏—Å–∫–∏, –ª–∞–π–∫–∏, –∏–≥—Ä—ã, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –≤–∏–¥–µ–æ, –ø–æ—Å—Ç—ã)
- –í–Ω–µ—à–Ω–∏–π —Ñ–∞—Ä–º (–ª–æ–≥–∏–Ω –Ω–∞ —Å–∞–π—Ç–∞—Ö, —Ä–µ–ø–æ—Å—Ç—ã, –ø—Ä–æ—Å–º–æ—Ç—Ä —é—Ç—É–±)
- –í–∫–ª—é—á–µ–Ω –ø—Ä–æ—Ñ. —Ä–µ–∂–∏–º
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ 2–§–ê
- –ü—Ä–æ–π–¥–µ–Ω —á–µ–∫ –ø–æ "—Å–µ–ª—Ñ–∏"

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
- –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞ –§–ë + –ø–æ—á—Ç–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- ID –∞–∫–∫–∞—É–Ω—Ç–∞
- Cookies .JSON
- USERAGENT
- –°–µ–ª—Ñ–∏ –∏ –ø–∞—Å–ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ó–†–î

**–¶–ï–ù–ê:** ${farmUa7DPrice}$
**–û–°–¢–ê–¢–û–ö:** ${farmUa7D.length || 0}
            `;
                const buttonsToShow = farmUa7D.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_farm_ua_7d_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, uaFarm7Message, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'ua_farm_14_days':
            const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (farmUa14D.length > 0) {
                const farmUa14DPrice = farmUa14D[0].price;
                const uaFarm14Message = `
*--- –ú–æ—â–Ω—ã–π —Ä—É—á–Ω–æ–π —Ñ–∞—Ä–º 14 –¥–Ω–µ–π ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
- –ö–∏–Ω–≥/–º–∞–º–∫–∞/—Å–æ—Ü –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏—Å—å –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º IP.

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –ñ–µ–Ω—Å–∫–∏–π –ø–æ–ª
- –ò–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ
- –î—Ä—É–∑—å—è 20-100
- –ù–∞–≥—É–ª—è–Ω–Ω—ã–µ cookies (2000+)
- 15+ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
- –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ 8+ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏ –ª–µ–Ω—Ç–µ
- 20+ –ø–æ—Å—Ç–æ–≤/—Ä–µ–ø–æ—Å—Ç–æ–≤
- 2 –∞–¥–µ–∫–≤–∞—Ç–Ω–æ –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ Fan Page + 3 –ø–æ—Å—Ç–∞
- –í–æ–∑—Ä–∞—Å—Ç 20-35
- –ü—Ä–∏–≤—è–∑–∞–Ω–∞ –ø–æ—á—Ç–∞
- –ü–∞—Å–ø–æ—Ä—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ó–†–î 70%
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ–∞—Ä–º (–ø–µ—Ä–µ–ø–∏—Å–∫–∏, –ª–∞–π–∫–∏, –∏–≥—Ä—ã, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –≤–∏–¥–µ–æ, –ø–æ—Å—Ç—ã)
- –í–Ω–µ—à–Ω–∏–π —Ñ–∞—Ä–º (–ª–æ–≥–∏–Ω –Ω–∞ —Å–∞–π—Ç–∞—Ö, —Ä–µ–ø–æ—Å—Ç—ã, –ø—Ä–æ—Å–º–æ—Ç—Ä —é—Ç—É–±)
- –í–∫–ª—é—á–µ–Ω –ø—Ä–æ—Ñ. —Ä–µ–∂–∏–º
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ 2–§–ê
- –ü—Ä–æ–π–¥–µ–Ω —á–µ–∫ –ø–æ "—Å–µ–ª—Ñ–∏"

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
- –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞ –§–ë + –ø–æ—á—Ç–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- ID –∞–∫–∫–∞—É–Ω—Ç–∞
- Cookies .JSON
- USERAGENT
- –°–µ–ª—Ñ–∏ –∏ –ø–∞—Å–ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ó–†–î

**–¶–ï–ù–ê:** ${farmUa14DPrice}$
**–û–°–¢–ê–¢–û–ö:** ${farmUa14D.length || 0}
            `;
                const buttonsToShow = farmUa14D.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_farm_ua_14d_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, uaFarm14Message, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'ua_farm_30_days':
            const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (farmUa30D.length > 0) {
                const farmUa30DPrice = farmUa30D[0].price;
                const uaFarm30Message = `
*--- –ú–æ—â–Ω—ã–π —Ä—É—á–Ω–æ–π —Ñ–∞—Ä–º 30 –¥–Ω–µ–π ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
- –ö–∏–Ω–≥/–º–∞–º–∫–∞/—Å–æ—Ü –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏—Å—å –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º IP.

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –ñ–µ–Ω—Å–∫–∏–π –ø–æ–ª
- –ò–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ
- –î—Ä—É–∑—å—è 20-100
- –ù–∞–≥—É–ª—è–Ω–Ω—ã–µ cookies (2000+)
- 15+ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
- –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ 8+ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏ –ª–µ–Ω—Ç–µ
- 20+ –ø–æ—Å—Ç–æ–≤/—Ä–µ–ø–æ—Å—Ç–æ–≤
- 2 –∞–¥–µ–∫–≤–∞—Ç–Ω–æ –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ Fan Page + 3 –ø–æ—Å—Ç–∞
- –í–æ–∑—Ä–∞—Å—Ç 20-35
- –ü—Ä–∏–≤—è–∑–∞–Ω–∞ –ø–æ—á—Ç–∞
- –ü–∞—Å–ø–æ—Ä—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ó–†–î 70%
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ–∞—Ä–º (–ø–µ—Ä–µ–ø–∏—Å–∫–∏, –ª–∞–π–∫–∏, –∏–≥—Ä—ã, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –≤–∏–¥–µ–æ, –ø–æ—Å—Ç—ã)
- –í–Ω–µ—à–Ω–∏–π —Ñ–∞—Ä–º (–ª–æ–≥–∏–Ω –Ω–∞ —Å–∞–π—Ç–∞—Ö, —Ä–µ–ø–æ—Å—Ç—ã, –ø—Ä–æ—Å–º–æ—Ç—Ä —é—Ç—É–±)
- –í–∫–ª—é—á–µ–Ω –ø—Ä–æ—Ñ. —Ä–µ–∂–∏–º
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ 2–§–ê
- –ü—Ä–æ–π–¥–µ–Ω —á–µ–∫ –ø–æ "—Å–µ–ª—Ñ–∏"

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
- –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞ –§–ë + –ø–æ—á—Ç–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- ID –∞–∫–∫–∞—É–Ω—Ç–∞
- Cookies .JSON
- USERAGENT
- –°–µ–ª—Ñ–∏ –∏ –ø–∞—Å–ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ó–†–î

**–¶–ï–ù–ê:** ${farmUa30DPrice}$
**–û–°–¢–ê–¢–û–ö:** ${farmUa30D.length || 0}
            `;
                const buttonsToShow = farmUa30D.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_farm_ua_30d_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, uaFarm30Message, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'auto_reg_ua_info':
            const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (autoRegs.length > 0) {
                const firstAutoRegPrice = autoRegs[0].price;
                const autoRegUaFpMessage = `
*--- –ê–≤—Ç–æ—Ä–µ–≥ UA ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–°—Ç–∞–±–∏–ª—å–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á - –∞–≤—Ç–æ–∑–∞–ª–∏–≤, —Ä—É—á–Ω–æ–π –∑–∞–ª–∏–≤, –ª–∏–Ω–∫–æ–≤–∫–∞ –∫ –∫–∏–Ω–≥—É, –¥–æ—Ñ–∞—Ä–º –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–ø–∫–æ–≥–æ –∫–∏–Ω–≥–∞ –∏ —Ç.–¥. –ê–∫–∫–∞—É–Ω—Ç—ã UA, –≥–æ—Ç–æ–≤—ã –¥–ª—è —Ä–µ–∫–ª–∞–º—ã.

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–∞
- –ó–∞–ø–æ–ª–Ω–µ–Ω –≥–æ—Ä–æ–¥/—Ä–∞–±–æ—Ç–∞ –∏ —Ç.–¥.
- –ò–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏ –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —è–∑—ã–∫–µ
- –ü–æ–ª - –∂–µ–Ω—Å–∫–∏–π

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
- –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞ –§–ë + –ø–æ—á—Ç–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- ID –∞–∫–∫–∞—É–Ω—Ç–∞
- Cookies .JSON
- USERAGENT
- EAAB-—Ç–æ–∫–µ–Ω –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ.

**–¶–ï–ù–ê:** ${firstAutoRegPrice}$
**–û–°–¢–ê–¢–û–ö:** ${autoRegs.length || 0}
                    `;
                const buttonsToShow = autoRegs.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_purchase_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, autoRegUaFpMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }
            break;
        case 'auto_reg_ua_fp':
            const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (autoRegsFp.length > 0) {
                const firstAutoRegPrice = autoRegsFp[0].price;
                const autoRegUaFpMessage = `
*--- –ê–≤—Ç–æ—Ä–µ–≥ UA + FP ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–°—Ç–∞–±–∏–ª—å–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á - –∞–≤—Ç–æ–∑–∞–ª–∏–≤, —Ä—É—á–Ω–æ–π –∑–∞–ª–∏–≤, –ª–∏–Ω–∫–æ–≤–∫–∞ –∫ –∫–∏–Ω–≥—É, –¥–æ—Ñ–∞—Ä–º –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–ø–∫–æ–≥–æ –∫–∏–Ω–≥–∞ –∏ —Ç.–¥. –ê–∫–∫–∞—É–Ω—Ç—ã UA, –≥–æ—Ç–æ–≤—ã –¥–ª—è —Ä–µ–∫–ª–∞–º—ã.

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–∞
- –ó–∞–ø–æ–ª–Ω–µ–Ω –≥–æ—Ä–æ–¥/—Ä–∞–±–æ—Ç–∞ –∏ —Ç.–¥.
- –ò–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏ –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —è–∑—ã–∫–µ
- –ü–æ–ª - –∂–µ–Ω—Å–∫–∏–π

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
- –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞ –§–ë + –ø–æ—á—Ç–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- ID –∞–∫–∫–∞—É–Ω—Ç–∞
- Cookies .JSON
- USERAGENT
- EAAB-—Ç–æ–∫–µ–Ω –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ.

**–¶–ï–ù–ê:** ${firstAutoRegPrice}$
**–û–°–¢–ê–¢–û–ö:** ${autoRegsFp.length || 0}
                    `;
                const buttonsToShow = autoRegsFp.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_autoreg_fp_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, autoRegUaFpMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }
            break;
        case 'auto_reg_ua_fp_pk':
            const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (autoRegsFpPk.length > 0) {
                const firstAutoRegPrice = autoRegsFpPk[0].price;
                const autoRegUaFpMessage = `
*--- –ê–≤—Ç–æ—Ä–µ–≥ UA + FP + PK ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–°—Ç–∞–±–∏–ª—å–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á - –∞–≤—Ç–æ–∑–∞–ª–∏–≤, —Ä—É—á–Ω–æ–π –∑–∞–ª–∏–≤, –ª–∏–Ω–∫–æ–≤–∫–∞ –∫ –∫–∏–Ω–≥—É, –¥–æ—Ñ–∞—Ä–º –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–ø–∫–æ–≥–æ –∫–∏–Ω–≥–∞ –∏ —Ç.–¥. –ê–∫–∫–∞—É–Ω—Ç—ã UA, –≥–æ—Ç–æ–≤—ã –¥–ª—è —Ä–µ–∫–ª–∞–º—ã.

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–∞
- –ó–∞–ø–æ–ª–Ω–µ–Ω –≥–æ—Ä–æ–¥/—Ä–∞–±–æ—Ç–∞ –∏ —Ç.–¥.
- –ò–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏ –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —è–∑—ã–∫–µ
- –ü–æ–ª - –∂–µ–Ω—Å–∫–∏–π

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
- –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞ –§–ë + –ø–æ—á—Ç–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- ID –∞–∫–∫–∞—É–Ω—Ç–∞
- Cookies .JSON
- USERAGENT
- EAAB-—Ç–æ–∫–µ–Ω –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ.

**–¶–ï–ù–ê:** ${firstAutoRegPrice}$
**–û–°–¢–ê–¢–û–ö:** ${autoRegsFpPk.length || 0}
                    `;
                const buttonsToShow = autoRegsFpPk.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_autoreg_fp_pk_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, autoRegUaFpMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }
            break;
        case 'insta_bm_info':
            const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (instaBm.length > 0) {
                const instaBmPrice = instaBm[0].price;
                const instaBmMessage = `
*--- Insta BM ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ë–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä Facebook (–ë–ú –§–ë) –õ–∏–º–∏—Ç 50$ –ë–µ–∑ –†–ö –∏ –§–ü.
–í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏—ë–º–∞ –±–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${instaBmPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${instaBm.length || 0}
            `;
                const buttonsToShow = instaBm.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_insta_bm_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, instaBmMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'insta_bm_fp_info':
            const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (instaBmFp.length > 0) {
                const instaBmFpPrice = instaBmFp[0].price;
                const instaBmFpMessage = `
*--- Insta BM & FP ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ë–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä Facebook (–ë–ú –§–ë) –õ–∏–º–∏—Ç 50$ –ë–µ–∑ –§–ü.
–í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏—ë–º–∞ –±–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${instaBmFpPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${instaBmFp.length || 0}
            `;
                const buttonsToShow = instaBmFp.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_autoreg_fp_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, instaBmFpMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'insta_bm_fp_rk_info':
            const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (instaBmFpRk.length > 0) {
                const instaBmFpRkPrice = instaBmFpRk[0].price;
                const instaBmFpRkMessage = `
*--- Insta BM & FP & PK ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ë–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä Facebook (–ë–ú –§–ë) –õ–∏–º–∏—Ç 50$.
–í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏—ë–º–∞ –±–∏–∑–Ω–µ—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${instaBmFpRkPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${instaBmFpRk.length || 0}
            `;
                const buttonsToShow = instaBmFpRk.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_insta_bm_fp_rk_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, instaBmFpRkMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'privat_info':
            const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (pbPrivat.length > 0) {
                const pbPrivatPrice = pbPrivat[0].price;
                const pbPrivatMessage = `
*--- –ü—Ä–∏–≤–∞—Ç bin ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ö–∞—Ä—Ç–∞ –¥–ª—è –ø–µ—Ä–≤–æ–±–∏–ª–∞, –±–µ–∑ –±–∞–ª–∞–Ω—Å–∞. –í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è, —Å–≤–≤. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${pbPrivatPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${pbPrivat.length || 0}
            `;
                const buttonsToShow = pbPrivat.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_privat_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, pbPrivatMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'monobank_info':
            const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (pbMono.length > 0) {
                const pbMonoPrice = pbMono[0].price;
                const pbMonoMessage = `
*--- –ú–æ–Ω–æ bin ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ö–∞—Ä—Ç–∞ –¥–ª—è –ø–µ—Ä–≤–æ–±–∏–ª–∞, –±–µ–∑ –±–∞–ª–∞–Ω—Å–∞. –í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è, —Å–≤–≤. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${pbMonoPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${pbMono.length || 0}
            `;
                const buttonsToShow = pbMono.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_mono_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, pbMonoMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'a_bank_info':
            const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (pbAbank.length > 0) {
                const pbAbankPrice = pbAbank[0].price;
                const pbAbankMessage = `
*--- –ê-–±–∞–Ω–∫ bin ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ö–∞—Ä—Ç–∞ –¥–ª—è –ø–µ—Ä–≤–æ–±–∏–ª–∞, –±–µ–∑ –±–∞–ª–∞–Ω—Å–∞. –í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è, —Å–≤–≤. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${pbAbankPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${pbAbank.length || 0}
            `;
                const buttonsToShow = pbAbank.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_abank_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, pbAbankMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'sens_info':
            const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (pbSens.length > 0) {
                const pbSensPrice = pbSens[0].price;
                const pbSensMessage = `
*--- –°–µ–Ω—Å bin ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
–ö–∞—Ä—Ç–∞ –¥–ª—è –ø–µ—Ä–≤–æ–±–∏–ª–∞, –±–µ–∑ –±–∞–ª–∞–Ω—Å–∞. –í –∫–æ–º–ø–ª–µ–∫—Ç–µ –∏–¥—ë—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è, —Å–≤–≤. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫—É–ø–∫–∏ 24 —á–∞—Å–∞ (!!!)

**–¶–ï–ù–ê:** ${pbSensPrice}$
**–û–°–¢–ê–¢–û–ö:**  ${pbSens.length || 0}
            `;
                const buttonsToShow = pbSens.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_sens_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, pbSensMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'vodafone_info':
            const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (proxyVodafone.length > 0) {
                const proxyVodafonePrice = proxyVodafone[0].price;
                const proxyVodafoneMessage = `
*--- Proxy 30 –¥–Ω–µ–π ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
- Socks5/HTTP –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã
- –°–º–µ–Ω–∞ IP –ø–æ —Å—Å—ã–ª–∫–µ
- 1 –ø—Ä–æ–∫—Å–∏ = 1 —Ä—É–∫–∏

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
IP/Port/Log/Pass + –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

**–¶–ï–ù–ê:** ${proxyVodafonePrice || 40}$
**–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Å–∞–ø–ø–æ—Ä—Ç–æ–º @r0yal13**
            `;
                const buttonsToShow = proxyVodafone.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_vodafone_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, proxyVodafoneMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'life_info':
            const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (proxyLife.length > 0) {
                const proxyLifePrice = proxyLife[0].price;
                const proxyLifeMessage = `
*--- Proxy 30 –¥–Ω–µ–π ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
- Socks5/HTTP –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã
- –°–º–µ–Ω–∞ IP –ø–æ —Å—Å—ã–ª–∫–µ
- 1 –ø—Ä–æ–∫—Å–∏ = 1 —Ä—É–∫–∏

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
IP/Port/Log/Pass + –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

**–¶–ï–ù–ê:** ${proxyLifePrice || 40}$
**–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Å–∞–ø–ø–æ—Ä—Ç–æ–º @r0yal13**
            `;
                const buttonsToShow = proxyLife.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_life_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, proxyLifeMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'kyivstar_info':
            const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if (proxyKyivstar.length > 0) {
                const proxyKyivstarPrice = proxyKyivstar[0].price;
                const proxyKyivstarMessage = `
*--- Proxy 30 –¥–Ω–µ–π ---*

**–û–ø–∏—Å–∞–Ω–∏–µ:**
- Socks5/HTTP –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã
- –°–º–µ–Ω–∞ IP –ø–æ —Å—Å—ã–ª–∫–µ
- 1 –ø—Ä–æ–∫—Å–∏ = 1 —Ä—É–∫–∏

**–í –∫–æ–º–ø–ª–µ–∫—Ç–µ:**
IP/Port/Log/Pass + –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

**–¶–ï–ù–ê:** ${proxyKyivstarPrice || 40}$
**–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Å–∞–ø–ø–æ—Ä—Ç–æ–º @r0yal13**
            `;
                const buttonsToShow = proxyKyivstar.slice(0, 9).map((_, index) => {
                    const buttonText = `${index + 1}—à—Ç`;
                    const callbackData = `confirm_kyivstar_${index + 1}`;
                    return { text: buttonText, callback_data: callbackData };
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
                buttonsToShow.push({ text: '–í–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥', callback_data: 'buy' });

                const confirmPurchaseKeyboard = {
                    inline_keyboard: [
                        buttonsToShow.slice(0, 3),
                        buttonsToShow.slice(3, 6),
                        buttonsToShow.slice(6, 9),
                        buttonsToShow.slice(9, 10),
                    ]
                };

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await bot.sendMessage(chatId, proxyKyivstarMessage, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmPurchaseKeyboard
                });
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
            }

            break;
        case 'confirm_purchase_1':
            try {
                const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (autoRegs && autoRegs.length > 0) {
                    const autoReg = autoRegs[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < autoReg.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, autoReg.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeAutoReg(autoReg.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    await sendAutoRegLinks(userId, 1);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedAutoReg = await getAvailableAutoRegs();
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_purchase_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_purchase_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const autoRegs = await getAvailableAutoRegs(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegs && autoRegs.length > 0) {
                        const autoReg = autoRegs[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoReg.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoReg.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoReg(autoReg.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegs();

                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_1':
            try {
                const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (autoRegsFp && autoRegsFp.length > 0) {
                    const autoRegFp = autoRegsFp[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < autoRegFp.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, autoRegFp.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeAutoRegFp(autoRegFp.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    await sendAutoRegFpLinks(userId, 1);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedAutoRegFp = await getAvailableAutoRegsFp();
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_autoreg_fp_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const autoRegsFp = await getAvailableAutoRegsFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFp && autoRegsFp.length > 0) {
                        const autoRegFp = autoRegsFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFp.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFp.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFp(autoRegFp.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoRegFp = await getAvailableAutoRegsFp();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_1':
            try {
                const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                    const autoRegFpPk = autoRegsFpPk[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < autoRegFpPk.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, autoRegFpPk.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeAutoRegFpPk(autoRegFpPk.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    await sendAutoRegFpPkLinks(userId, 1);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedAutoReg = await getAvailableAutoRegsFpPk();
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_autoreg_fp_pk_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_autoreg_fp_pk_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const autoRegsFpPk = await getAvailableAutoRegsFpPk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (autoRegsFpPk && autoRegsFpPk.length > 0) {
                        const autoRegFpPk = autoRegsFpPk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < autoRegFpPk.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, autoRegFpPk.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeAutoRegFpPk(autoRegFpPk.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        await sendAutoRegFpPkLinks(userId, 1);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedAutoReg = await getAvailableAutoRegsFpPk();
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_1':
            try {
                const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (farmUa7D && farmUa7D.length > 0) {
                    const farmUa7d = farmUa7D[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < farmUa7d.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, farmUa7d.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeFarmUa7d(farmUa7d.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_farm_ua_7d_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_7d_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const farmUa7D = await getAvailableFarmUa7D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa7D && farmUa7D.length > 0) {
                        const farmUa7d = farmUa7D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa7d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa7d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa7d(farmUa7d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa7d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa7D = await getAvailableFarmUa7D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_1':
            try {
                const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (farmUa14D && farmUa14D.length > 0) {
                    const farmUa14d = farmUa14D[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < farmUa14d.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, farmUa14d.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeFarmUa14d(farmUa14d.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_farm_ua_14d_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_14d_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const farmUa14D = await getAvailableFarmUa14D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa14D && farmUa14D.length > 0) {
                        const farmUa14d = farmUa14D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa14d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa14d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa14d(farmUa14d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa14d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa14D = await getAvailableFarmUa14D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_1':
            try {
                const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (farmUa30D && farmUa30D.length > 0) {
                    const farmUa30d = farmUa30D[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < farmUa30d.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, farmUa30d.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeFarmUa30d(farmUa30d.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_farm_ua_30d_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_farm_ua_30d_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const farmUa30D = await getAvailableFarmUa30D(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (farmUa30D && farmUa30D.length > 0) {
                        const farmUa30d = farmUa30D[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < farmUa30d.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, farmUa30d.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeFarmUa30d(farmUa30d.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${farmUa30d.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableFarmUa30D(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_1':
            try {
                const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (instaBm && instaBm.length > 0) {
                    const instaBM = instaBm[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < instaBM.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, instaBM.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeInstaBm(instaBM.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableInstaBm(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_insta_bm_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const instaBm = await getAvailableInstaBm(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBm && instaBm.length > 0) {
                        const instaBM = instaBm[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBM.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBM.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBm(instaBM.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBM.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBm(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_1':
            try {
                const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (instaBmFp && instaBmFp.length > 0) {
                    const instaBMFP = instaBmFp[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < instaBMFP.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, instaBMFP.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeInstaBmFp(instaBMFP.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_insta_bm_fp_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_4':
            for (let i = 0; i < 2; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const instaBmFp = await getAvailableInstaBmFp(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFp && instaBmFp.length > 0) {
                        const instaBMFP = instaBmFp[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFP.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFP.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFp(instaBMFP.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFP.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFp(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_1':
            try {
                const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (instaBmFpRk && instaBmFpRk.length > 0) {
                    const instaBMFPRK = instaBmFpRk[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < instaBMFPRK.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, instaBMFPRK.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeInstaBmFpRk(instaBMFPRK.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_insta_bm_fp_rk_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_insta_bm_fp_rk_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const instaBmFpRk = await getAvailableInstaBmFpRk(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (instaBmFpRk && instaBmFpRk.length > 0) {
                        const instaBMFPRK = instaBmFpRk[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < instaBMFPRK.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, instaBMFPRK.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removeInstaBmFpRk(instaBMFPRK.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${instaBMFPRK.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailableInstaBmFpRk(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_1':
            try {
                const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (pbPrivat && pbPrivat.length > 0) {
                    const pbPrivats = pbPrivat[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < pbPrivats.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, pbPrivats.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removePbPrivat(pbPrivats.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_privat_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_privat_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const pbPrivat = await getAvailablePbPrivat(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbPrivat && pbPrivat.length > 0) {
                        const pbPrivats = pbPrivat[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbPrivats.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbPrivats.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbPrivat(pbPrivats.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbPrivats.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbPrivat(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_1':
            try {
                const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (pbMono && pbMono.length > 0) {
                    const pbMonos = pbMono[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < pbMonos.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, pbMonos.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removePbMono(pbMonos.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailablePbMono(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_mono_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_mono_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const pbMono = await getAvailablePbMono(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbMono && pbMono.length > 0) {
                        const pbMonos = pbMono[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbMonos.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbMonos.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbMono(pbMonos.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbMonos.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbMono(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_1':
            try {
                const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (pbAbank && pbAbank.length > 0) {
                    const pbAbanks = pbAbank[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < pbAbanks.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, pbAbanks.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removePbAbank(pbAbanks.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailablePbAbank(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_abank_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_abank_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const pbAbank = await getAvailablePbAbank(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbAbank && pbAbank.length > 0) {
                        const pbAbanks = pbAbank[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbAbanks.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbAbanks.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbAbank(pbAbanks.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbAbanks.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbAbank(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_1':
            try {
                const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (pbSens && pbSens.length > 0) {
                    const pbSenss = pbSens[0];

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < pbSenss.price) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, pbSenss.price);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removePbSens(pbSenss.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailablePbSens(userId);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                    await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                }
            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_sens_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_sens_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const pbSens = await getAvailablePbSens(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if (pbSens && pbSens.length > 0) {
                        const pbSenss = pbSens[0];

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                        const user = await getUserById(userId);
                        if (user.balance < pbSenss.price) {
                            await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                            return;
                        }

                        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                        await deductBalance(userId, pbSenss.price);

                        // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        await removePbSens(pbSenss.id);

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –°—Å—ã–ª–∫–∞: ${pbSenss.link}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                        await bot.sendMessage(chatId, successMessage);

                        // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                        const updatedFarmUa30D = await getAvailablePbSens(userId);
                    } else {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ
                        await bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');

                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ–≥–µ.');
                    }
                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_1':
            try {
                const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const proxyVodafones = proxyVodafone[0];
                const proxyPriceVodafone = proxyVodafones.price || 40

                console.log(proxyPriceVodafone)
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                const user = await getUserById(userId);
                if (user.balance < proxyPriceVodafone) {
                    await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                    return;
                }

                // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                await deductBalance(userId, proxyPriceVodafone);

                // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                await removeProxyVodafone(proxyVodafones.id);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                await bot.sendMessage(chatId, successMessage);

                // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_vodafone_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40


                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40


                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40


                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);


                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40


                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40


                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_vodafone_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const proxyVodafone = await getAvailableProxyVodafone(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyVodafones = proxyVodafone[0];
                    const proxyPriceVodafone = proxyVodafones.price || 40


                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceVodafone) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceVodafone);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyVodafone(proxyVodafones.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyVodafone(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_1':
            try {
                const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                const proxyLifes = proxyLife[0];
                const proxyPriceLife = proxyLifes.price || 40

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                const user = await getUserById(userId);
                if (user.balance < proxyPriceLife) {
                    await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                    return;
                }

                // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                await deductBalance(userId, proxyPriceLife);

                // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                await removeProxyLife(proxyLifes.id);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                await bot.sendMessage(chatId, successMessage);

                // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                const updatedFarmUa30D = await getAvailableProxyLife(userId);

            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_life_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_life_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const proxyLife = await getAvailableProxyLife(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                    const proxyLifes = proxyLife[0];
                    const proxyPriceLife = proxyLifes.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceLife) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceLife);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyLife(proxyLifes.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyLife(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_1':
            try {
                const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const proxyKyivstars = proxyKyivstar[0];
                const proxyPriceKyivstar = proxyKyivstars.price || 40

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                const user = await getUserById(userId);
                if (user.balance < proxyPriceKyivstar) {
                    await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                    return;
                }

                // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                await deductBalance(userId, proxyPriceKyivstar);

                // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                await removeProxyKyivstar(proxyKyivstars.id);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                await bot.sendMessage(chatId, successMessage);

                // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

            } catch (error) {
                console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
            break;
        case 'confirm_kyivstar_2':
            for (let i = 0; i < 2; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_3':
            for (let i = 0; i < 3; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_4':
            for (let i = 0; i < 4; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_5':
            for (let i = 0; i < 5; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_6':
            for (let i = 0; i < 6; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_7':
            for (let i = 0; i < 7; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_8':
            for (let i = 0; i < 8; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;
        case 'confirm_kyivstar_9':
            for (let i = 0; i < 9; i++) {
                try {
                    const proxyKyivstar = await getAvailableProxyKyivstar(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ—Ä–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const proxyKyivstars = proxyKyivstar[0];
                    const proxyPriceKyivstar = proxyKyivstars.price || 40

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
                    const user = await getUserById(userId);
                    if (user.balance < proxyPriceKyivstar) {
                        await bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.');
                        return;
                    }

                    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–Ω—É –∞–≤—Ç–æ—Ä–µ–≥–∞
                    await deductBalance(userId, proxyPriceKyivstar);

                    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ—Ä–µ–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    await removeProxyKyivstar(proxyKyivstars.id);

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                    const successMessage = `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–ø–ø–æ—Ä—Ç—É @r0yal13\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${await getBalance(userId)}$`;
                    await bot.sendMessage(chatId, successMessage);

                    // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ–≥–∞—Ö –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
                    const updatedFarmUa30D = await getAvailableProxyKyivstar(userId);

                } catch (error) {
                    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏:', error);
                    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                }
            }
            break;

        default:
            break;
    }
});
// 
